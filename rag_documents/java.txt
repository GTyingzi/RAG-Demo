面向对象就是Java语言的基础，也是Java语言的重要特性。面向对象是指以对象为基本单元，包含属性和方法。对象的状态用属性表达，对象的行为用方法表达
平台无关性的具体表现在于，Java 是“一次编写，到处运行（Write Once，Run any Where）”的语言，因此采用 Java 语言编写的程序具有很好的可移植性，而保证这一点的正是 Java 的虚拟机机制。在引入虚拟机之后，Java 语言在不同的平台上运行不需要重新编译
提供了丰富的类库和API文档，以及第三方开发包工具包，还有大量的基于Java的开源项目，帮助程序设计人员参考学习，JDK就是开放的源代码之一，读者可以通过分析项目的源代码，来提高自己的编程水平
Java 程序在 Java 平台运行时会被编译成字节码文件，然后可以在有 Java 环境的操作系统上运行。在运行文件时，Java 的解释器对这些字节码进行解释执行，执行过程中需要加入的类在连接阶段被载入到运行环境中
多线程机制使应用程序在同一时间并行执行多项任务，Java语言提供多线程之间的同步机制，这些相应的同步机制可以很好的保证不同线程，能够正确的共享数据。多线程机制使程序具有更好的交互性和实时性
Java 语言支持 Internet 应用的开发，在 Java 的基本应用编程接口中就有一个网络应用编程接口，它提供了网络应用编程的类库，包括 URL、URLConnection、Socket 等。Java 的 RIM 机制也是开发分布式应用的重要手段
Java语言的强类型机制、异常处理、垃圾的自动收集等是Java程序健壮性的重要保证。对指针的丢弃是Java的明智选择。Java的安全检查机制使得Java更具健壮性
Java是一种先编译后解释的语言，所以它不如全编译性语言快。但是有些情况下性能是很要紧的，为了支持这些情况，Java设计者制作了“及时”编译程序，它能在运行时把Java字节码翻译成特定CPU（中央处理器）的机器代码，也就是实现全编译了。Java字节码格式设计时考虑到这些“及时”编译程序的需要，所以生成机器代码的过程相当简单，它能产生相当好的代码
在Java语言中删除了类似于C语言中的指针和内容释放等语法，有效的避免了非法操作内存，代码要经过校验之后才能够运行，所以未经允许的Java程序不可能出现损害系统平台的行为，最大的好处就是，Java可以编写防病毒和可修复的系统，Java通常被用在网络环境中，为此，Java提供了一个安全机制以防恶意代码的攻击，从而可以提高系统的安全性
